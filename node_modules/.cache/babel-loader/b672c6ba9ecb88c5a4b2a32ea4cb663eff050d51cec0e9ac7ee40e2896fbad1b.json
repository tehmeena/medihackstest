{"ast":null,"code":"var _jsxFileName = \"/Users/tehmeenasalahin/Projects/my_first_react_app_copy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Forms from './Forms';\nimport sampleUsers from './SampleUsers';\nimport { ProviderDashboard, PregnantDashboard, Dashboards } from './Dashboard.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignUpForm, setShowSignUpForm] = useState(false);\n  const [showRoleForm, setShowRoleForm] = useState(false);\n\n  //const [users, setUsers] = useState([]);\n  const [users, setUsers] = useState([...sampleUsers]);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedProfession, setSelectedProfession] = useState('');\n  const handleLoginClick = () => {\n    setShowLoginForm(true);\n    setShowSignUpForm(false);\n    setShowRoleForm(false);\n  };\n  const handleSignUpClick = () => {\n    setShowLoginForm(false);\n    setShowSignUpForm(true);\n    setShowRoleForm(false);\n  };\n  const handleToggleForm = () => {\n    setShowLoginForm(!showLoginForm);\n    setShowSignUpForm(!showSignUpForm);\n    setShowRoleForm(false);\n  };\n  const handleSignupFormSubmit = e => {\n    e.preventDefault();\n    if (users.length >= 4) {\n      alert('User limit reached. No more sign-ups allowed.');\n      return;\n    }\n    const newUser = {\n      id: users.length + 1,\n      firstname: e.target['signup-firstname'].value,\n      middlename: e.target['signup-middlename'].value,\n      lastname: e.target['signup-surname'].value,\n      dob: e.target['signup-dob'].value,\n      gender: e.target['signup-gender'].value,\n      country: e.target['signup-country'].value,\n      email: e.target['signup-email'].value,\n      phone: e.target['signup-phone'].value,\n      username: e.target['signup-username'].value,\n      password: e.target['signup-password'].value,\n      role: null,\n      isLoggedIn: true,\n      dashboard: '',\n      inviteCode: generateInviteCode(),\n      connections: [],\n      circles: []\n    };\n    setUsers([...users, newUser]);\n    setShowSignUpForm(false);\n    setShowRoleForm(true);\n    setIsLoggedIn(true);\n  };\n\n  //Circle creation code below: \n\n  //generates a random invite code that's permanently set for the user so they can add other users as connections later \n  const generateInviteCode = () => {\n    return Math.random().toString(36).substr(2, 9);\n  };\n  const handleInviteCodeSubmit = inviteCode => {\n    const invitedUser = users.find(user => user.inviteCode === inviteCode);\n    if (invitedUser) {\n      // Notify the invited user\n      alert(`${invitedUser.firstname} has been notified of your connection request.`);\n      // Logic to notify the user and handle acceptance\n    } else {\n      alert('Invalid invite code.');\n    }\n  };\n  const createCircle = (user, circleName, members) => {\n    const newCircle = {\n      name: circleName,\n      members\n    };\n    user.circles.push(newCircle);\n    setUsers([...users]); // Update users state\n  };\n  const handleCircleCreation = (circleName, members) => {\n    const currentUser = users.find(user => user.isLoggedIn);\n    createCircle(currentUser, circleName, members);\n  };\n\n  //End circle creation code stuff \n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    const username = e.target['login-username'].value;\n    const password = e.target['login-password'].value;\n    const user = users.find(user => user.username === username && user.password === password);\n    if (user) {\n      alert('Login successful');\n      setIsLoggedIn(true);\n      user.isLoggedIn = true;\n    } else {\n      alert('Invalid username or password');\n    }\n    setShowLoginForm(false);\n  };\n\n  //avoids some potential bugs that could come up when user is selecting their role just in case \n  const handleRoleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'role') {\n      setSelectedRole(value);\n      // Reset profession if the role is not 'provider'\n      if (value !== 'provider') {\n        setSelectedProfession('');\n      }\n    } else if (name === 'profession') {\n      setSelectedProfession(value);\n    }\n  };\n  const handleRoleFormSubmit = e => {\n    e.preventDefault();\n\n    // Assuming new users are added at the end of the users array\n    const newUserIndex = users.length - 1; // Index of the new user\n    const newUser = users[newUserIndex]; // Fetch the new user object\n\n    //assign dashboard type for new user \n    let dashboard = '';\n    if (selectedRole === 'provider') {\n      dashboard = 'ProviderDashboard';\n    } else if (selectedRole === 'pregnant') {\n      dashboard = 'PregnantDashboard';\n    } else {\n      dashboard = ''; // Default dashboard for now \n    }\n\n    // Update the role and additional details for the new user\n    const updatedUsers = [...users];\n    updatedUsers[newUserIndex] = {\n      ...newUser,\n      role: selectedRole,\n      weeksPregnant: selectedRole === 'pregnant' ? e.target['weeks'].value : null,\n      profession: selectedRole === 'provider' ? e.target['profession'].value : null,\n      licenseNumber: selectedRole === 'provider' ? e.target['license'].value : null,\n      dashboard: dashboard\n    };\n    setUsers(updatedUsers);\n    alert(`Role: ${selectedRole}, Profession: ${selectedProfession}`);\n    setShowRoleForm(false);\n  };\n\n  // Assuming a function to check user roles\n  const getCurrentUser = () => {\n    return users.find(user => user.isLoggedIn);\n  };\n  const currentUser = getCurrentUser();\n  const Dashboards = ({\n    user\n  }) => {\n    switch (user.role) {\n      case 'provider':\n        return /*#__PURE__*/_jsxDEV(ProviderDashboard, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 24\n        }, this);\n      case 'pregnant':\n        return /*#__PURE__*/_jsxDEV(PregnantDashboard, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Dashboard Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 24\n        }, this);\n      // Handle other roles or errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn &&\n    /*#__PURE__*/\n    //Show welcome page as long as user is not logged in \n    _jsxDEV(\"section\", {\n      id: \"section1\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello world for now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUpClick,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this), currentUser && currentUser.role ? /*#__PURE__*/_jsxDEV(Dashboards, {\n      user: currentUser\n    }, currentUser.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(Forms, {\n      users: users,\n      setUsers: setUsers,\n      setIsLoggedIn: setIsLoggedIn,\n      showLoginForm: showLoginForm,\n      showSignUpForm: showSignUpForm,\n      showRoleForm: showRoleForm,\n      selectedRole: selectedRole,\n      handleToggleForm: handleToggleForm,\n      handleRoleChange: handleRoleChange,\n      handleRoleFormSubmit: handleRoleFormSubmit,\n      handleSignupFormSubmit: handleSignupFormSubmit,\n      handleLoginSubmit: handleLoginSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registered Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.firstname, \" \", user.lastname, \" - \", user.username, user.isLoggedIn ? \" (Logged In)\" : \" (Not Logged In)\", currentUser !== null && currentUser !== void 0 && currentUser.role ? `${currentUser.role}!` : \"no role!\", currentUser !== null && currentUser !== void 0 && currentUser.inviteCode ? `${currentUser.inviteCode}!` : \"no code!\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MdshZB7fvIXblqDxvpxR/y1HLA0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Forms","sampleUsers","ProviderDashboard","PregnantDashboard","Dashboards","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","showLoginForm","setShowLoginForm","showSignUpForm","setShowSignUpForm","showRoleForm","setShowRoleForm","users","setUsers","selectedRole","setSelectedRole","selectedProfession","setSelectedProfession","handleLoginClick","handleSignUpClick","handleToggleForm","handleSignupFormSubmit","e","preventDefault","length","alert","newUser","id","firstname","target","value","middlename","lastname","dob","gender","country","email","phone","username","password","role","dashboard","inviteCode","generateInviteCode","connections","circles","Math","random","toString","substr","handleInviteCodeSubmit","invitedUser","find","user","createCircle","circleName","members","newCircle","name","push","handleCircleCreation","currentUser","handleLoginSubmit","handleRoleChange","handleRoleFormSubmit","newUserIndex","updatedUsers","weeksPregnant","profession","licenseNumber","getCurrentUser","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/tehmeenasalahin/Projects/my_first_react_app_copy/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Forms from './Forms';\nimport sampleUsers from './SampleUsers';\nimport { ProviderDashboard, PregnantDashboard, Dashboards } from './Dashboard.jsx';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const [showLoginForm, setShowLoginForm] = useState(false);\n    const [showSignUpForm, setShowSignUpForm] = useState(false);\n    const [showRoleForm, setShowRoleForm] = useState(false);\n\n    //const [users, setUsers] = useState([]);\n    const [users, setUsers] = useState([...sampleUsers])\n    const [selectedRole, setSelectedRole] = useState('');\n    const [selectedProfession, setSelectedProfession] = useState('');\n\n\n    const handleLoginClick = () => {\n        setShowLoginForm(true);\n        setShowSignUpForm(false);\n        setShowRoleForm(false);\n    };\n\n    const handleSignUpClick = () => {\n        setShowLoginForm(false);\n        setShowSignUpForm(true);\n        setShowRoleForm(false);\n    };\n\n    const handleToggleForm = () => {\n        setShowLoginForm(!showLoginForm);\n        setShowSignUpForm(!showSignUpForm);\n        setShowRoleForm(false);\n    };\n\n    const handleSignupFormSubmit = (e) => {\n        e.preventDefault();\n        if (users.length >= 4) {\n            alert('User limit reached. No more sign-ups allowed.');\n            return;\n        }\n        const newUser = {\n            id: users.length + 1,\n            firstname: e.target['signup-firstname'].value,\n            middlename: e.target['signup-middlename'].value,\n            lastname: e.target['signup-surname'].value,\n            dob: e.target['signup-dob'].value,\n            gender: e.target['signup-gender'].value,\n            country: e.target['signup-country'].value,\n            email: e.target['signup-email'].value,\n            phone: e.target['signup-phone'].value,\n            username: e.target['signup-username'].value,\n            password: e.target['signup-password'].value,\n            role: null,\n            isLoggedIn: true,\n            dashboard: '',\n            inviteCode: generateInviteCode(),\n            connections: [],\n            circles: []\n        };\n\n        setUsers([...users, newUser]);\n        setShowSignUpForm(false);\n        setShowRoleForm(true);\n        setIsLoggedIn(true);\n    };\n\n    //Circle creation code below: \n\n    //generates a random invite code that's permanently set for the user so they can add other users as connections later \n    const generateInviteCode = () => {\n        return Math.random().toString(36).substr(2, 9);\n    };\n\n    const handleInviteCodeSubmit = (inviteCode) => {\n        const invitedUser = users.find(user => user.inviteCode === inviteCode);\n        if (invitedUser) {\n            // Notify the invited user\n            alert(`${invitedUser.firstname} has been notified of your connection request.`);\n            // Logic to notify the user and handle acceptance\n        } else {\n            alert('Invalid invite code.');\n        }\n    };\n\n    const createCircle = (user, circleName, members) => {\n        const newCircle = {\n            name: circleName,\n            members\n        };\n        user.circles.push(newCircle);\n        setUsers([...users]); // Update users state\n    };\n\n    const handleCircleCreation = (circleName, members) => {\n        const currentUser = users.find(user => user.isLoggedIn);\n        createCircle(currentUser, circleName, members);\n    };\n\n    //End circle creation code stuff \n\n    const handleLoginSubmit = (e) => {\n        e.preventDefault();\n        const username = e.target['login-username'].value;\n        const password = e.target['login-password'].value;\n        const user = users.find(user => user.username === username && user.password === password);\n        if (user) {\n            alert('Login successful');\n            setIsLoggedIn(true);\n            user.isLoggedIn = true;\n        } else {\n            alert('Invalid username or password');\n        }\n        setShowLoginForm(false);\n\n    };\n\n    //avoids some potential bugs that could come up when user is selecting their role just in case \n    const handleRoleChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === 'role') {\n            setSelectedRole(value);\n            // Reset profession if the role is not 'provider'\n            if (value !== 'provider') {\n                setSelectedProfession('');\n            }\n        } else if (name === 'profession') {\n            setSelectedProfession(value);\n        }\n    };\n\n    const handleRoleFormSubmit = (e) => {\n        e.preventDefault();\n\n        // Assuming new users are added at the end of the users array\n        const newUserIndex = users.length - 1; // Index of the new user\n        const newUser = users[newUserIndex]; // Fetch the new user object\n\n\n        //assign dashboard type for new user \n        let dashboard = '';\n        if (selectedRole === 'provider') {\n            dashboard = 'ProviderDashboard';\n        } else if (selectedRole === 'pregnant') {\n            dashboard = 'PregnantDashboard';\n        } else {\n            dashboard = ''; // Default dashboard for now \n        }\n\n        // Update the role and additional details for the new user\n        const updatedUsers = [...users];\n        updatedUsers[newUserIndex] = {\n            ...newUser,\n            role: selectedRole,\n            weeksPregnant: selectedRole === 'pregnant' ? e.target['weeks'].value : null,\n            profession: selectedRole === 'provider' ? e.target['profession'].value : null,\n            licenseNumber: selectedRole === 'provider' ? e.target['license'].value : null,\n            dashboard: dashboard\n\n        };\n        setUsers(updatedUsers);\n        alert(`Role: ${selectedRole}, Profession: ${selectedProfession}`);\n        setShowRoleForm(false);\n\n    };\n\n    // Assuming a function to check user roles\n    const getCurrentUser = () => {\n        return users.find(user => user.isLoggedIn);\n    };\n\n    const currentUser = getCurrentUser();\n\n    const Dashboards = ({ user }) => {\n        switch (user.role) {\n            case 'provider':\n                return <ProviderDashboard user={user} />;\n            case 'pregnant':\n                return <PregnantDashboard user={user} />;\n            default:\n                return <div>No Dashboard Found</div>; // Handle other roles or errors\n        }\n    };\n\n    return (\n        <div>\n            {!isLoggedIn && ( //Show welcome page as long as user is not logged in \n                <section id=\"section1\">\n                    <header>Welcome</header>\n                    <p>Hello world for now!</p>\n                    <button onClick={handleLoginClick}>Login</button>\n                    <button onClick={handleSignUpClick}>Sign Up</button>\n                </section>\n            )}\n\n\n            {currentUser && currentUser.role ? (\n                <Dashboards key={currentUser.id} user={currentUser} />\n            ) : null}\n\n\n            <Forms users={users} setUsers={setUsers} setIsLoggedIn={setIsLoggedIn}\n                showLoginForm={showLoginForm}\n                showSignUpForm={showSignUpForm}\n                showRoleForm={showRoleForm}\n                selectedRole={selectedRole}\n                handleToggleForm={handleToggleForm}\n                handleRoleChange={handleRoleChange}\n                handleRoleFormSubmit={handleRoleFormSubmit}\n                handleSignupFormSubmit={handleSignupFormSubmit}\n                handleLoginSubmit={handleLoginSubmit}\n            />\n\n            {/* code to test registered users */}\n            <h2>Registered Users</h2>\n            <ul>\n                {users.map((user, index) => (\n                    <li key={index}>\n                        {user.firstname} {user.lastname} - {user.username}\n                        {user.isLoggedIn ? \" (Logged In)\" : \" (Not Logged In)\"}\n                        {currentUser?.role ? `${currentUser.role}!` : \"no role!\"}\n                        {currentUser?.inviteCode ? `${currentUser.inviteCode}!` : \"no code!\"}\n                    </li>\n                ))}\n            </ul>\n\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}