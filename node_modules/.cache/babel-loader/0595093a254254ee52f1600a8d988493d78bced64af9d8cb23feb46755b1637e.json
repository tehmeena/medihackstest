{"ast":null,"code":"var _jsxFileName = \"/Users/tehmeenasalahin/Projects/my_first_react_app_copy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Forms from './Forms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignUpForm, setShowSignUpForm] = useState(false);\n  const [showRoleForm, setShowRoleForm] = useState(false);\n  const [selectedRole, setSelectedRole] = useState('');\n  const handleLoginClick = () => {\n    setShowLoginForm(true);\n    setShowSignUpForm(false);\n    setShowRoleForm(false);\n  };\n  const handleSignUpClick = () => {\n    setShowLoginForm(false);\n    setShowSignUpForm(true);\n    setShowRoleForm(false);\n  };\n  const handleToggleForm = () => {\n    setShowLoginForm(!showLoginForm);\n    setShowSignUpForm(!showSignUpForm);\n    setShowRoleForm(false);\n  };\n  const handleSignupFormSubmit = e => {\n    e.preventDefault();\n    // Username validation\n    const usernameRegex = /^(?=.*[a-zA-Z])[a-zA-Z0-9][a-zA-Z0-9._]{1,}$/;\n    const username = e.target.elements['signup-username'].value.trim();\n    if (!usernameRegex.test(username)) {\n      alert('Username must start with a letter or number and can only include letters, numbers, periods, and underscores; must include at least one letter; must be at least two characters.');\n      return; // Exit function if validation fails\n    }\n\n    // Password validation\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%&*(),.?])[A-Za-z\\d!@#$%&*(),.?]{10,}$/;\n    const password = e.target.elements['signup-password'].value.trim();\n    if (!passwordRegex.test(password)) {\n      alert('Password must contain at least one letter, one number, and one special symbol (!@#$%&*(),.?) and be at least 10 characters long.');\n      return; // Exit function if validation fails\n    }\n\n    // If validation passes, proceed with form submission or user creation\n    // Your logic for creating the user goes here\n\n    console.log('Form submitted successfully');\n    setShowSignUpForm(false);\n    setShowRoleForm(true);\n  };\n  const handleRoleChange = e => {\n    setSelectedRole(e.target.value);\n  };\n  const handleRoleFormSubmit = e => {\n    e.preventDefault();\n    console.log('Role selected:', selectedRole);\n    // Additional logic for handling role-specific questions can be added here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"section1\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello world for now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUpClick,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forms, {\n      showLoginForm: showLoginForm,\n      showSignUpForm: showSignUpForm,\n      showRoleForm: showRoleForm,\n      selectedRole: selectedRole,\n      handleToggleForm: handleToggleForm,\n      handleRoleChange: handleRoleChange,\n      handleRoleFormSubmit: handleRoleFormSubmit,\n      handleSignupFormSubmit: handleSignupFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fhivsbAXXYAvHstCieDTRfh6mTw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Forms","jsxDEV","_jsxDEV","App","_s","showLoginForm","setShowLoginForm","showSignUpForm","setShowSignUpForm","showRoleForm","setShowRoleForm","selectedRole","setSelectedRole","handleLoginClick","handleSignUpClick","handleToggleForm","handleSignupFormSubmit","e","preventDefault","usernameRegex","username","target","elements","value","trim","test","alert","passwordRegex","password","console","log","handleRoleChange","handleRoleFormSubmit","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tehmeenasalahin/Projects/my_first_react_app_copy/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Forms from './Forms'; \n\nconst App = () => {\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showSignUpForm, setShowSignUpForm] = useState(false);\n  const [showRoleForm, setShowRoleForm] = useState(false);\n  const [selectedRole, setSelectedRole] = useState('');\n\n  const handleLoginClick = () => {\n    setShowLoginForm(true);\n    setShowSignUpForm(false);\n    setShowRoleForm(false);\n  };\n\n  const handleSignUpClick = () => {\n    setShowLoginForm(false);\n    setShowSignUpForm(true);\n    setShowRoleForm(false);\n  };\n\n  const handleToggleForm = () => {\n    setShowLoginForm(!showLoginForm);\n    setShowSignUpForm(!showSignUpForm);\n    setShowRoleForm(false);\n  };\n\n  const handleSignupFormSubmit = (e) => {\n    e.preventDefault();\n        // Username validation\n        const usernameRegex = /^(?=.*[a-zA-Z])[a-zA-Z0-9][a-zA-Z0-9._]{1,}$/;\n        const username = e.target.elements['signup-username'].value.trim();\n        if (!usernameRegex.test(username)) {\n            alert('Username must start with a letter or number and can only include letters, numbers, periods, and underscores; must include at least one letter; must be at least two characters.');\n            return; // Exit function if validation fails\n        }\n    \n        // Password validation\n        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%&*(),.?])[A-Za-z\\d!@#$%&*(),.?]{10,}$/;\n        const password = e.target.elements['signup-password'].value.trim();\n        if (!passwordRegex.test(password)) {\n            alert('Password must contain at least one letter, one number, and one special symbol (!@#$%&*(),.?) and be at least 10 characters long.');\n            return; // Exit function if validation fails\n        }\n    \n        // If validation passes, proceed with form submission or user creation\n        // Your logic for creating the user goes here\n    \n        console.log('Form submitted successfully');\n    setShowSignUpForm(false);\n    setShowRoleForm(true);\n  };\n\n  const handleRoleChange = (e) => {\n    setSelectedRole(e.target.value);\n  };\n\n  const handleRoleFormSubmit = (e) => {\n    e.preventDefault();\n    console.log('Role selected:', selectedRole);\n    // Additional logic for handling role-specific questions can be added here\n  };\n\n  return (\n    <div>\n      <section id=\"section1\">\n        <header>Welcome</header>\n        <p>Hello world for now!</p>\n        <button onClick={handleLoginClick}>Login</button>\n        <button onClick={handleSignUpClick}>Sign Up</button>\n      </section>\n\n      {/* Render Forms component */}\n      <Forms\n        showLoginForm={showLoginForm}\n        showSignUpForm={showSignUpForm}\n        showRoleForm={showRoleForm}\n        selectedRole={selectedRole}\n        handleToggleForm={handleToggleForm}\n        handleRoleChange={handleRoleChange}\n        handleRoleFormSubmit={handleRoleFormSubmit}\n        handleSignupFormSubmit={handleSignupFormSubmit}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}