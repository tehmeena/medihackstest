{"ast":null,"code":"var _jsxFileName = \"/Users/tehmeenasalahin/Projects/my_first_react_app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\n//component is a piece of code that returns or renders JSX\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Person = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Name: \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Last Name: \", props.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Age: \", props.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n//props allow you to pass dynamic data through react components\n//props are just arguments that you pass into react components \n//props are passed via attributes \n//props = shortened way of saying properties\n\n//pass name={'John'} into Person react component below \n//every component has a built in props object \n\n//////\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//       <Person \n//       name={'John'} \n//       lastName={'Doe'} \n//       age={25}\n//       /> \n//       <Person name =\"Jane\" age={2+2}/> \n//       <Person /> \n//       <Person /> \n//       <Person /> \n//     </div>\n//   )\n//}\n//////\n\n//state in react is a plain JS object used by react to represent \n//...a piece of info about the component's current situation,...\n//managed by the component itself.\n//to use state, have to import useState first as shown above in the code\n\n//array destructuring [,] = \n//functions that start with use are called hook \n//first part in square brackets pair is the name of the state\n//the second part is the setter function \n//name the second variable the same as the first variable but with 'set' in the front \n//const [counter, setCounter] = useState(0); \n\n//event is an action that triggered...\n//..as result of user action or system generated action\n//...(.e.g mouse click)\n\n//NEVER manually modify a state! \n\n//useEffect has different syntax than useState \n\n//\n_c = Person;\nconst App = () => {\n  _s();\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    //alert('Reload')\n\n    alert(\"You've changed the counter to \" + counter);\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCount => prevCount - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCount => prevCount + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Person","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","lastName","age","_c","App","_s","counter","setCounter","alert","className","onClick","prevCount","_c2","$RefreshReg$"],"sources":["/Users/tehmeenasalahin/Projects/my_first_react_app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\n//component is a piece of code that returns or renders JSX\nconst Person = (props) => {\n  return (\n    <>\n    <h1> Name: {props.name}</h1>\n    <h2>Last Name: {props.lastName}</h2>\n    <h2> Age: {props.age}</h2>\n    </>\n  )\n}\n\n//props allow you to pass dynamic data through react components\n//props are just arguments that you pass into react components \n//props are passed via attributes \n//props = shortened way of saying properties\n\n//pass name={'John'} into Person react component below \n//every component has a built in props object \n\n//////\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//       <Person \n//       name={'John'} \n//       lastName={'Doe'} \n//       age={25}\n//       /> \n//       <Person name =\"Jane\" age={2+2}/> \n//       <Person /> \n//       <Person /> \n//       <Person /> \n//     </div>\n//   )\n//}\n//////\n\n\n//state in react is a plain JS object used by react to represent \n//...a piece of info about the component's current situation,...\n//managed by the component itself.\n//to use state, have to import useState first as shown above in the code\n\n//array destructuring [,] = \n//functions that start with use are called hook \n//first part in square brackets pair is the name of the state\n//the second part is the setter function \n//name the second variable the same as the first variable but with 'set' in the front \n//const [counter, setCounter] = useState(0); \n\n//event is an action that triggered...\n//..as result of user action or system generated action\n//...(.e.g mouse click)\n\n//NEVER manually modify a state! \n\n//useEffect has different syntax than useState \n\n//\n\nconst App = () => {\n  const [counter, setCounter] = useState(0); \n\n  useEffect(() => {\n    //alert('Reload')\n  \n    alert(\"You've changed the counter to \" + counter)\n  }, [counter]);\n\n\n  return (\n    <div className = \"App\">\n      <button onClick = {() => setCounter((prevCount) => prevCount -1)}>-</button>\n      <h1>{counter}</h1>\n      <button onClick = {() => setCounter((prevCount) => prevCount +1)}>+</button>\n\n    </div>\n\n  );\n}\n\n\n\n\n\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACAL,OAAA;MAAAK,QAAA,GAAI,SAAO,EAACD,KAAK,CAACE,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BV,OAAA;MAAAK,QAAA,GAAI,aAAW,EAACD,KAAK,CAACO,QAAQ;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCV,OAAA;MAAAK,QAAA,GAAI,QAAM,EAACD,KAAK,CAACQ,GAAG;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACxB,CAAC;AAEP,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AAAAG,EAAA,GAzDMV,MAAM;AA2DZ,MAAMW,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd;;IAEAoB,KAAK,CAAC,gCAAgC,GAAGF,OAAO,CAAC;EACnD,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAGb,oBACEhB,OAAA;IAAKmB,SAAS,EAAG,KAAK;IAAAd,QAAA,gBACpBL,OAAA;MAAQoB,OAAO,EAAIA,CAAA,KAAMH,UAAU,CAAEI,SAAS,IAAKA,SAAS,GAAE,CAAC,CAAE;MAAAhB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5EV,OAAA;MAAAK,QAAA,EAAKW;IAAO;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBV,OAAA;MAAQoB,OAAO,EAAIA,CAAA,KAAMH,UAAU,CAAEI,SAAS,IAAKA,SAAS,GAAE,CAAC,CAAE;MAAAhB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzE,CAAC;AAGV,CAAC;AAAAK,EAAA,CAnBKD,GAAG;AAAAQ,GAAA,GAAHR,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}