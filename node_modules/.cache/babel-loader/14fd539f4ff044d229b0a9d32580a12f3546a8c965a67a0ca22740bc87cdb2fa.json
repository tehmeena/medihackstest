{"ast":null,"code":"var _jsxFileName = \"/Users/tehmeenasalahin/Projects/my_first_react_app/src/App.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport MovieCard from './MovieCard';\nimport './App.css';\nimport SearchIcon from './search.svg';\n\n// api key \n// ae654594\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://www.omdbapi.com?apikey=ae654594';\nconst movie1 = {\n  \"Title\": \"Fighting, Flying and Driving: The Stunts of Spiderman 3\",\n  \"Year\": \"2007\",\n  \"imdbID\": \"tt1132238\",\n  \"Type\": \"movie\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNTI3NDE1ZmEtMTRiMS00YTY4LTk0OGItNjY4YmI0MDM4OGM4XkEyXkFqcGdeQXVyODE2NDgwMzM@._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for movies\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No movies found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nmGuk4IsUa4415BYG0nQ+6CoHIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","SearchIcon","jsxDEV","_jsxDEV","API_URL","movie1","App","_s","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","data","json","Search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","length","map","movie","_c","$RefreshReg$"],"sources":["/Users/tehmeenasalahin/Projects/my_first_react_app/src/App.js"],"sourcesContent":["import {React, useState, useEffect} from 'react';\nimport MovieCard from './MovieCard';\n\n\nimport './App.css';\nimport SearchIcon from './search.svg';\n\n// api key \n// ae654594\n\nconst API_URL = 'https://www.omdbapi.com?apikey=ae654594';\n\nconst movie1 = {\n    \"Title\": \"Fighting, Flying and Driving: The Stunts of Spiderman 3\",\n    \"Year\": \"2007\",\n    \"imdbID\": \"tt1132238\",\n    \"Type\": \"movie\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNTI3NDE1ZmEtMTRiMS00YTY4LTk0OGItNjY4YmI0MDM4OGM4XkEyXkFqcGdeQXVyODE2NDgwMzM@._V1_SX300.jpg\"\n}\n\nconst App = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const searchMovies = async (title) => {\n        const response = await fetch(`${API_URL}&s=${title}`);\n        const data = await response.json();\n\n        setMovies(data.Search);\n    }\n\n    useEffect(() => {\n        searchMovies('Spiderman');\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <h1>MovieLand</h1>\n            <div className=\"search\">\n                <input\n                placeholder=\"Search for movies\"\n                value={searchTerm}\n                onChange={(e)=>setSearchTerm(e.target.value)}\n\n                ></input>\n\n                <img \n                src={SearchIcon}\n                alt=\"search\"\n                onClick={() => searchMovies(searchTerm)}>\n                </img>\n\n                {movies?.length > 0\n                    ? (\n                        <div className=\"container\">\n                            {movies.map((movie) => (\n                                <MovieCard movie = {movie} />\n                            ))}\n                        </div>\n\n                    ):(\n                        <div className=\"empty\">\n                            <h2>No movies found</h2>\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n  \n    );\n}\n\nexport default App;"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,SAAS,MAAM,aAAa;AAGnC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,MAAMC,MAAM,GAAG;EACX,OAAO,EAAE,yDAAyD;EAClE,MAAM,EAAE,MAAM;EACd,QAAQ,EAAE,WAAW;EACrB,MAAM,EAAE,OAAO;EACf,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,OAAO,MAAMS,KAAK,EAAE,CAAC;IACrD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElCR,SAAS,CAACO,IAAI,CAACE,MAAM,CAAC;EAC1B,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZa,YAAY,CAAC,WAAW,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBjB,OAAA;QACAsB,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAEhB,UAAW;QAClBiB,QAAQ,EAAGC,CAAC,IAAGjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErC,CAAC,eAETrB,OAAA;QACA2B,GAAG,EAAE7B,UAAW;QAChB8B,GAAG,EAAC,QAAQ;QACZC,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACF,UAAU;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EAEL,CAAAhB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEyB,MAAM,IAAG,CAAC,gBAEX9B,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrBZ,MAAM,CAAC0B,GAAG,CAAEC,KAAK,iBACdhC,OAAA,CAACH,SAAS;UAACmC,KAAK,EAAIA;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,gBAGNrB,OAAA;QAAKgB,SAAS,EAAC,OAAO;QAAAC,QAAA,eAClBjB,OAAA;UAAAiB,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd,CAAC;AAAAjB,EAAA,CAnDKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}